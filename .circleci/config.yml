# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test1:
    working_directory: ~/leetcode/algorithmsI/binarySearch
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/golang:1.16
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout:
          path: ~/leetcode
      - run:
          name: Enforce Go Formated Code
          command: >
            if [ "$(gofmt -d -e . | wc -l)" -gt 0 ]; then
              exit 1
            fi
      - run:
          name: Run Tests
          command: go test
  test2:
    working_directory: ~/leetcode/algorithmsI/sorting
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/golang:1.16
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout:
          path: ~/leetcode
      - run: 
          name: Enforce Go Formated Code
          command: >
            if [ "$(gofmt -d -e . | wc -l)" -gt 0 ]; then
              exit 1
            fi
      - run:
          name: Run Tests
          command: go test
  test3:
    working_directory: ~/leetcode/algorithmsI/mystrings
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/golang:1.16
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout:
          path: ~/leetcode
      - run: 
          name: Enforce Go Formated Code
          command: >
            if [ "$(gofmt -d -e . | wc -l)" -gt 0 ]; then
              exit 1
            fi
      - run:
          name: Run Tests
          command: go test
  test4:
    working_directory: ~/leetcode/algorithmsI/breathFirstSearch
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/golang:1.16
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout:
          path: ~/leetcode
      - run: 
          name: Enforce Go Formated Code
          command: >
            if [ "$(gofmt -d -e . | wc -l)" -gt 0 ]; then
              exit 1
            fi
      - run:
          name: Run Tests
          command: go test
  test5:
    working_directory: ~/leetcode/algorithmsI/linkedList
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/golang:1.16
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout:
          path: ~/leetcode
      - run: 
          name: Enforce Go Formated Code
          command: >
            if [ "$(gofmt -d -e . | wc -l)" -gt 0 ]; then
              exit 1
            fi
      - run:
          name: Run Tests
          command: go test
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - test1
      - test2
      - test3
      - test4
      - test5
